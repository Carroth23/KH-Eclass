정규표현식 (Regular Expression - Regex)
 - 텍스트 데이터에 대하여 단순 검색이 아닌 복잡한 조건의 패턴을 찾아내는 기술 (패턴 매칭 기법)
> 문서 뷰어 프로그램 내에 정교한 검색 기능
> 데이터 유효성 검사
> 웹 크롤링
> 로그 분석
> 빅데이터 ( 텍스트 데이터 분석 )


/Expression/Flag(옵션)

flag
g (Globa) : 전체 영역에서 검색을 수행
i (Sase Insensitive) : 대소문자를 가리지 않고 검색 수행
s (Single Line (dotall)) : 특수문자 . 이 \n 기호까지 포함하여 매칭하게하는 플래그

특수문자

1)
. : 모든 문자 1글자와 매칭(개행(\n) 생략)[\. .만 검색]
.. : 아무거나 2글자를 찾아라
t.e : t로 시작해서 +아무거나 한글자+e로 끝나는 문자

2)
^ : 전체문장의 시작부분에서 매칭 될 때만 검색(m플래그 세우면 문장시작에서도 찾음)
$ : 문장의 끝 부분에서 표현식이 매칭될 때만 검색
multiline 없이 사용되면, 전체문장에서 대상을 찾지만 m플래그를 세우면 각 행마다 검색대상을 찾음
^Apple$ 도 가능

!!! : ^기호는 문맥에 따라 not(반전)의 의미를 가지기도 함.
[^ADE]pple ADE가 아닌

3)
? : 바로 앞의 한 글자가 0글자 또는 1글자 있는 경우에 대한 매칭
(문맥에 따라 수량자 뒤에 사용될 경우는 Lazy Match의 의미를 가짐)
| : 또는

This is my World.
This is my Word.
World is beautiful.
문장에 대하여 Worl?d 라고 검색하면
World와 word가 모두 검색됨
Worl?d는 wor 글자 후에 l 이 있을수도 있고 없을수도 있으며 d가 옴.

4)
[] : 대괄호 사이에 존재하는 문자들 중 '하나'와 매칭
	[A-Z]pple a~zpple를 찾는것
[^] : 대괄호 사이에 존재하는 문자들만 빼고 매칭


----------------------------------------- 수량자
수량자는 기본적(default)으로 Greedy Match(최장 매치) 가 적용된다.
반대로 Lazy Match(최단 매치)를 적용하려면 수량자 뒤에 ?을 붙이면 됨.

5)
+ : 바로 앞에 있는 한글자가 1회 이상 반복되는 상황을 매칭

Sta+r   <-- 검색하면 모두 검색 성공
Star
Staar
Staaar

* : +와 비슷하지만 한글자도 없는 상황도 가능
Sta*r
Str도 찾을 수 있음

{} : 바로 앞에 있는 한 글자가 지정한 횟수 만큼 반복되는 매칭
Sta{2}r -> Staar
Sta{2,}r -> a가 2회 이상 반복되는 경우
Sta{2,4}r -> a가 2글자 이상 4글자 이하

----------------------------------------------
6)
() : 데이터 묶음 & 데이터 그룹화
(Pur|Ma)ple : Pur 또는 Ma 가 앞에 오고, 뒤에 ple가 붙는 경우를 매칭


$& 캡처변수는 정규표현식에 의해 검색된 내용을 저장하는 변수
그룹화 이후는 $1, $2 이런식으로 저장됨.

정규표현식에서 \d 는 0~9와 같은 의미이다.


그룹화에서 |(or)는 그룹화를 두개하는것이 아니다 그래서 앞에()이 찾아지면 숏컷연산으로 뒤에껄 찾지않음


lt="(.+?)"|g>(.+)<
